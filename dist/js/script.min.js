import{initContactPopupFunction}from"./contact.min.js";document.addEventListener("DOMContentLoaded",function(){(()=>{const e=(new Date).getFullYear();document.querySelector(".footer__year").textContent=e})(),initContactPopupFunction();const e={rootMargin:"-200px"},t=document.querySelectorAll(".to-animate");if(window.innerWidth>=900){const n=new IntersectionObserver((e,t)=>{e.forEach(e=>{e.isIntersecting&&(e.target.classList.add("animated"),t.unobserve(e.target))})},e);t.forEach(e=>{n.observe(e)})}else t.forEach(e=>e.classList.remove("to-animate"));const n=document.querySelector(".back-to-top");window.addEventListener("scroll",()=>{window.scrollY>=500?(n.classList.remove("hidden"),n.classList.add("active")):window.scrollY<500&&n.classList.contains("active")&&(n.classList.remove("active"),n.classList.add("hidden"))}),n.addEventListener("click",()=>{window.scrollTo({top:0})});const s=document.querySelector(".nav__link-img-conditioning"),r=document.querySelector(".nav__link-img-recuperation"),i=document.querySelector(".nav__link-img-wodkan");fetch("./images/svg/fan-icon.svg").then(e=>e.text()).then(e=>{s.innerHTML=e}).catch(e=>console.error(e)),fetch("./images/svg/recuperation-icon.svg").then(e=>e.text()).then(e=>{r.innerHTML=e}).catch(e=>console.error(e)),fetch("./images/svg/wod-kan-icon.svg").then(e=>e.text()).then(e=>{i.innerHTML=e}).catch(e=>console.error(e));const o=document.querySelectorAll(".counter__stats-stat"),a=document.querySelector(".counter");new IntersectionObserver(e=>{e[0].isIntersecting&&o.forEach(e=>{const t=()=>{const n=e.getAttribute("data-number"),s=parseInt(e.textContent);e.classList.add("show");s<n?(e.textContent=`${Math.floor(s+2)}`,setTimeout(t,5)):e.textContent=n};t()})},{rootMargin:"-250px"}).observe(a);const c=document.querySelector(".gallery__images"),l=document.querySelectorAll(".gallery__img"),d=document.querySelector(".gallery__btn--next"),u=document.querySelector(".gallery__btn--prev"),h=document.querySelector(".gallery__popup"),m=h.querySelector(".gallery__popup-img"),g=h.querySelector(".gallery__close-popup");let v,w,y=1;const b=()=>{l[y].classList.remove("active"),y--,l[y].classList.add("active"),v=window.innerWidth>=900?33.33:100,w=(y-1)*v,c.style.transform=`translateX(${-w}%)`},L=()=>{l[y].classList.remove("active"),y++,l[y].classList.add("active"),v=window.innerWidth>=900?33.33:100,w=(y-1)*v,c.style.transform=`translateX(${-w}%)`},_=()=>{h.classList.toggle("active"),document.body.classList.toggle("popup-active")};window.addEventListener("resize",()=>{v=window.innerWidth>=900?33.33:100,w=(y-1)*v,c.style.transform=`translateX(${-w}%)`}),h.addEventListener("click",e=>{e.target===h&&_()}),l.forEach(e=>e.addEventListener("click",()=>{const t=e.getAttribute("src"),n=e.getAttribute("alt");m.setAttribute("src",t),m.setAttribute("alt",n),_()})),g.addEventListener("click",_),window.innerWidth<=900&&(u.classList.add("disabled"),u.setAttribute("disabled","true")),u.addEventListener("click",()=>{1===y&&window.innerWidth>=900||2===y&&window.innerWidth<900?(b(),u.classList.add("disabled"),u.setAttribute("disabled","true")):(d.classList.remove("disabled"),d.removeAttribute("disabled"),b())}),d.addEventListener("click",()=>{y===l.length-2?(L(),d.classList.add("disabled"),d.setAttribute("disabled","true")):(u.removeAttribute("disabled"),u.classList.remove("disabled"),d.classList.remove("disabled"),d.removeAttribute("disabled"),L())});const p=document.querySelector(".reviews__reviews"),f=document.querySelectorAll(".reviews__box");let q,A,S,x=0;const E=()=>{let e=window.innerWidth>=800?50:100,t=window.innerWidth>=800?f.length-2:f.length-1;if(x>=t)x=0,p.style.transform="translateX(0)";else{x++;let t=x*e;p.style.transform=`translateX(${-t}%)`}};window.addEventListener("resize",()=>{let e=window.innerWidth>=800?50:100,t=x*e;p.style.transform=`translateX(${-t}%)`}),S=setInterval(E,4e3),p.addEventListener("touchstart",e=>{e.preventDefault(),q=e.touches[0].clientX,clearInterval(S)}),p.addEventListener("touchend",e=>{e.preventDefault(),A=e.changedTouches[0].clientX,k(),S=setInterval(E,4e3)});const k=()=>{const e=window.innerWidth>=800?50:100,t=window.innerWidth>=800?f.length-2:f.length-1;q-A>50&&x<t?x++:A-q>50&&x>0&&x--,p.style.transform=`translateX(${-e*x}%)`};document.querySelectorAll(".questions__accordion-toggler").forEach(e=>{e.addEventListener("click",()=>{const t=e.closest(".questions__accordion-box").querySelector(".questions__accordion-answer"),n=t.style.height&&"0px"!==t.style.height;document.querySelectorAll(".questions__accordion-answer").forEach(e=>{if(e!==t){e.setAttribute("aria-hidden","true"),e.style.height=e.scrollHeight+"px",requestAnimationFrame(()=>{e.style.height="0"});const t=e.closest(".questions__accordion-box").querySelector(".questions__accordion-toggler");t.classList.remove("opened"),t.setAttribute("aria-expanded","false")}}),n?(t.setAttribute("aria-hidden","true"),e.setAttribute("aria-expanded","false"),e.classList.remove("opened"),t.style.height=t.scrollHeight+"px",requestAnimationFrame(()=>{t.style.height="0"})):(t.setAttribute("aria-hidden","false"),e.setAttribute("aria-expanded","true"),e.classList.add("opened"),t.style.height=t.scrollHeight+"px")})})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
