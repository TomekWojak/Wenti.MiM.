document.addEventListener("DOMContentLoaded",function(){d=(new Date).getFullYear(),document.querySelector(".footer__year").textContent=d;function e(){w[p].classList.remove("active"),w[--p].classList.add("active"),o=900<=window.innerWidth?33.33:100,s=(p-1)*o,m.style.transform="translateX(".concat(-s,"%)")}function t(){w[p].classList.remove("active"),w[++p].classList.add("active"),o=900<=window.innerWidth?33.33:100,s=(p-1)*o,m.style.transform="translateX(".concat(-s,"%)")}function r(){L.classList.toggle("active"),document.body.classList.toggle("popup-active")}function n(){var e=800<=window.innerWidth?50:100;(800<=window.innerWidth?A.length-2:A.length-1)<=S?(S=0,q.style.transform="translateX(0)"):(e=++S*e,q.style.transform="translateX(".concat(-e,"%)"))}var i,o,s,c,a,l,d=document.querySelectorAll(".to-animate"),u=(900<=window.innerWidth?(i=new IntersectionObserver(function(e,t){e.forEach(function(e){e.isIntersecting&&(e.target.classList.add("animated"),t.unobserve(e.target))})},{rootMargin:"-200px"}),d.forEach(function(e){i.observe(e)})):d.forEach(function(e){return e.classList.remove("to-animate")}),document.querySelector(".back-to-top")),v=(window.addEventListener("scroll",function(){500<=window.scrollY?(u.classList.remove("hidden"),u.classList.add("active")):window.scrollY<500&&u.classList.contains("active")&&(u.classList.remove("active"),u.classList.add("hidden"))}),u.addEventListener("click",function(){window.scrollTo({top:0})}),document.querySelector(".nav__link-img-conditioning")),h=document.querySelector(".nav__link-img-recuperation"),f=document.querySelector(".nav__link-img-wodkan"),g=(fetch("./images/svg/fan-icon.svg").then(function(e){return e.text()}).then(function(e){v.innerHTML=e}).catch(function(e){return console.error(e)}),fetch("./images/svg/recuperation-icon.svg").then(function(e){return e.text()}).then(function(e){h.innerHTML=e}).catch(function(e){return console.error(e)}),fetch("./images/svg/wod-kan-icon.svg").then(function(e){return e.text()}).then(function(e){f.innerHTML=e}).catch(function(e){return console.error(e)}),document.querySelectorAll(".counter__stats-stat")),d=document.querySelector(".counter"),m=(new IntersectionObserver(function(e){e[0].isIntersecting&&g.forEach(function(n){var r=function(){var e=n.getAttribute("data-number"),t=parseInt(n.textContent);n.classList.add("show");t<e?(n.textContent="".concat(Math.floor(t+2)),setTimeout(r,5)):n.textContent=e};r()})},{rootMargin:"-250px"}).observe(d),document.querySelector(".gallery__images")),w=document.querySelectorAll(".gallery__img"),y=document.querySelector(".gallery__btn--next"),b=document.querySelector(".gallery__btn--prev"),L=document.querySelector(".gallery__popup"),_=L.querySelector(".gallery__popup-img"),d=L.querySelector(".gallery__close-popup"),p=1,q=(window.addEventListener("resize",function(){o=900<=window.innerWidth?33.33:100,s=(p-1)*o,m.style.transform="translateX(".concat(-s,"%)")}),L.addEventListener("click",function(e){e.target===L&&r()}),w.forEach(function(n){return n.addEventListener("click",function(){var e=n.getAttribute("src"),t=n.getAttribute("alt");_.setAttribute("src",e),_.setAttribute("alt",t),r()})}),d.addEventListener("click",r),window.innerWidth<=900&&(b.classList.add("disabled"),b.setAttribute("disabled","true")),b.addEventListener("click",function(){1===p&&900<=window.innerWidth||2===p&&window.innerWidth<900?(e(),b.classList.add("disabled"),b.setAttribute("disabled","true")):(y.classList.remove("disabled"),y.removeAttribute("disabled"),e())}),y.addEventListener("click",function(){p===w.length-2?(t(),y.classList.add("disabled"),y.setAttribute("disabled","true")):(b.removeAttribute("disabled"),b.classList.remove("disabled"),y.classList.remove("disabled"),y.removeAttribute("disabled"),t())}),document.querySelector(".reviews__reviews")),A=document.querySelectorAll(".reviews__box"),S=0,x=(window.addEventListener("resize",function(){var e=800<=window.innerWidth?50:100,e=S*e;q.style.transform="translateX(".concat(-e,"%)")}),l=setInterval(n,4e3),q.addEventListener("touchstart",function(e){e.preventDefault(),c=e.touches[0].clientX,clearInterval(l)}),q.addEventListener("touchend",function(e){e.preventDefault(),a=e.changedTouches[0].clientX,x(),l=setInterval(n,4e3)}),function(){var e=800<=window.innerWidth?50:100,t=800<=window.innerWidth?A.length-2:A.length-1;50<c-a&&S<t?S++:50<a-c&&0<S&&S--,q.style.transform="translateX(".concat(-e*S,"%)")});document.querySelectorAll(".questions__accordion-toggler").forEach(function(t){t.addEventListener("click",function(){var n=t.closest(".questions__accordion-box").querySelector(".questions__accordion-answer"),e=n.style.height&&"0px"!==n.style.height;document.querySelectorAll(".questions__accordion-answer").forEach(function(e){var t;e!==n&&(e.setAttribute("aria-hidden","true"),e.style.height=e.scrollHeight+"px",requestAnimationFrame(function(){e.style.height="0"}),(t=e.closest(".questions__accordion-box").querySelector(".questions__accordion-toggler")).classList.remove("opened"),t.setAttribute("aria-expanded","false"))}),e?(n.setAttribute("aria-hidden","true"),t.setAttribute("aria-expanded","false"),t.classList.remove("opened"),n.style.height=n.scrollHeight+"px",requestAnimationFrame(function(){n.style.height="0"})):(n.setAttribute("aria-hidden","false"),t.setAttribute("aria-expanded","true"),t.classList.add("opened"),n.style.height=n.scrollHeight+"px")})})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
